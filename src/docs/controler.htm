<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title>Controller与Action</title>
     <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Le styles -->
    <link href="css/bootstrap.css" rel="stylesheet">
</head>
<body>

    <p>
        所有的控制器都放在Controllers目录下，所有的控制器都需要用Web<span style=" color:#000000;">.</span>App<span 
            style=" color:#000000;">.</span>RegisterController来注册。这是有Go反射特性所决定的，因为我没办法用反射来获取包中所有的struct。下面是Home控制器的示例代码：</p>
    <p>
        <pre>        
package Controllers

import (
	"Model"
	"System/Web"
	"fmt"
)

type Home struct {
	Web.Controller
}

//注册Controller
func init() {
	Web.App.RegisterController(Home{})
}       
 </pre>在GoMvc中并没有实现Filter(过滤器的功能)，只提供了<span style=" color:#000000;">OnLoad，UnLoad两个函数，OnLoad在页面加载时，即Action执行之前调，该函数没有任何返回值。UnLoad，在页面结束时，即Action已经执行完，页面已输出展示时执行。如用户登录的判断可以放在OnLoad中执行。</span></p>
<p>
    另外<span style=" color:#000000;">提供了ResponseEnd函数，在调用了ResponseEnd后，请求将结束，如在OnLoad中调用了this.ResponseEnd()，Action将得不到执行，请求结束。</span></p>
<p>
    Controller的定义如下：</p>
<pre>
type Controller struct {
	Request       *http.Request
	Response      http.ResponseWriter
	ViewData      map[string]interface{}
	Session       map[string]interface{}
	RouteData     map[string]interface{}
	QueryString   map[string]string
	Form          map[string]string
	...
	Cookies       map[string]string
	.....
}
</pre>
    <p>
        <b>Form</b>中存放了所有的Post过来的表单值，<b>QueryString </b>
        存放了地址栏参数的值。当值重复时，这里存放的是最后一次的值，如a=1&amp;a=2，最后保存的值是2。Cookies存放了所有Cookies的值。</p>
</body>
</html>
