<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title>路由</title>
     <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Le styles -->
    <link href="css/bootstrap.css" rel="stylesheet">
</head>
<body>

    <p>
        路由用RouteTable.AddRote来注册。其格式如下： 
    </p>
    <pre>//注册标准路由
	RouteTable.AddRote(&amp;RouteItem{
		Name:     &quot;default&quot;,
		Url:      &quot;{controller}/{action}&quot;,
		Defaults: map[string]interface{}{&quot;controller&quot;: &quot;home&quot;, &quot;action&quot;: &quot;index&quot;}})
</pre>
    <p>
        Name:路由名称<br />
        Url:路由的格式<br />
        Defaults: 路由参数的默认值 
    </p>
    除了默认值，还可以指定约束，来限制参数的类型，如下面的例子，指定id参数，只能是数字型。 
    <pre>RouteTable.AddRote(&amp;RouteItem{
		Name:        &quot;default&quot;,
		Url:         &quot;{controller}/{action}/{id}&quot;,
		Defaults:    map[string]interface{}{&quot;controller&quot;: &quot;home&quot;, &quot;action&quot;: &quot;index&quot;, &quot;id&quot;: 123},
		Constraints: map[string]string{&quot;id&quot;: `^(\d+)$`}})
</pre>
    在上面的例子中我们指定了id参数只能是数字，并设置了默认值123。要在Controller中获取该参数值，可以用this.RouteData[&quot;id&quot;]。 
    <p>
    </p>
    <p>
        因为在Go没有办法反射出包中的所有struct，所以需要手动来注册Controller,格式如下： 
    </p>
    <pre>import (
	&quot;System/Web&quot;
	&quot;fmt&quot;
)

type Home struct {
	Web.Controller
}

//注册Controller
func init() {
	Web.App.RegisterController(Home{})
}
</pre>
    对于Controller的命名没有严格的要求，可以用Home,也可以用HomeController

</body>
</html>
