<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title>参数自动绑定</title>
    <meta charset="utf-8">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Le styles -->
    <link href="css/bootstrap.css" rel="stylesheet">
</head>
<body>

    GoMvc支持参数的自动绑定，但参数类型必须是struct类型才可以，因为Go中没有办法来获取函数参数的名称。如我们定义一个User类，如下： 
    <pre>type User struct {
	UserName  string
	Password string
}
</pre>
    然后定义一个表单，表单中各控件的名称与User的字段名相同，如下： 
    <pre>&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;
&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;
            用户名： 
        &lt;/td&gt;
        &lt;td&gt;
            &lt;input id=&quot;UserName0&quot; name=&quot;UserName0&quot; type=&quot;text&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
            用户名：&lt;/td&gt;
        &lt;td&gt;
            &lt;input id=&quot;Password0&quot; name=&quot;Password0&quot; type=&quot;password&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
        &lt;/td&gt;
        &lt;td align=&quot;center&quot;&gt;
            &lt;input id=&quot;Submit2&quot; type=&quot;submit&quot; value=&quot;submit&quot; /&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
&lt;/form&gt;
</pre>
    Action的定义如下： 
    <pre>func (this *Home) Binder(u Model.User) *Web.ViewResult {
	....
	}
</pre>

    <p>
        除了参数自动绑定，还提供了<span style=" color:#000000;">UpdateModel函数，其定义在&quot;System/Web/Controller.go&quot;中，上面的Action还可以改用UpdateModel，如下所示：</span></p>
<pre>
func (this *Home) Binder(u Model.User) *Web.ViewResult {
    u:= Model.User{}
    err:=this.UpdateModel(&u)
	....
}

</pre>

</body>
</html>
